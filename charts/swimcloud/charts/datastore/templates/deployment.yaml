apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datastore.fullname" . }}
  labels:
    {{- include "datastore.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "datastore.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "datastore.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "datastore.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          env:
            - name: "SRC_MQTT_MODE"
              value: {{ .Values.global.SRC_MQTT_MODE}}
            - name: "SRC_CHANNEL_NAME"
              value: {{ .Values.global.CHANNEL_STORE}}
            - name: "MQTT_DEBUG"
              value: "{{ .Values.global.MESSAGES_DEBUG}}"
            - name: "QUEUE_URL"
              value: {{ .Values.global.QUEUE_URL}}
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  key:  AWS_ACCESS_KEY_ID
                  name: {{ .Release.Name }}-auth          
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  key:  AWS_SECRET_ACCESS_KEY
                  name: {{ .Release.Name }}-auth
          ports:
            - name: http
              containerPort: 4001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
